# üêæ @noel/paw: Paw is a personalized website about myself and my projects, source code for https://floofy.dev
# Copyright (c) 2018-2022 Noel
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: ESLint
on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '.github/**'
      - '.vscode/**'
      - '.husky/**'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'package.json'
      - 'renovate.json'
      - 'tsconfig.json'

  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '.github/**'
      - '.vscode/**'
      - '.husky/**'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'package.json'
      - 'renovate.json'
      - 'tsconfig.json'

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x, 18.x]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      
      - name: Uses Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup Yarn Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Lint project with ESLint
        run: yarn lint

      - name: Check if project compiles
        run: tsc --noEmit
